buildscript {
    repositories {
        mavenCentral()
        maven {
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.0.15'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

minecraft {
    mappings channel: 'snapshot', version: project.mcp_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=lithium.mixins.json'

            mods {
                lithiumforge {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, 'lithium.refmap.json'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = project.maven_group
version = project.mod_version
archivesBaseName = "${project.name}-mc${project.minecraft_version}"

def build_release = System.getenv("BUILD_RELEASE") == "true"
def build_id = System.getenv("BUILD_ID")

if (!build_release) {
    version += "-SNAPSHOT"
}

if (build_id != null) {
    version += "+build.${build_id}"
}

sourceSets {
    api {
        java {
            compileClasspath += main.compileClasspath
        }
    }

    main {
        java {
            compileClasspath += api.output
            runtimeClasspath += api.output
        }
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    //mixin
    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"

        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Include the license in all JAR outputs
tasks.withType(Jar) {
    from "LICENSE.txt"
    from sourceSets.api.output
}

jar {
    manifest {
        attributes([
                "MixinConfigs": "lithium.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')
